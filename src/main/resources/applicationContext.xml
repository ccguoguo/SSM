<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://www.springframework.org/schema/beans" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xmlns:tx="http://www.springframework.org/schema/tx" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.3.xsd 
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">

<!-- jdbc配置文件 -->
<context:property-placeholder location="classpath:db.properties"/>
<!-- 扫描包(创建包里的bean对象) -->
<context:component-scan base-package="com.owen.service"></context:component-scan>

<!-- 配置阿里druid连接池 -->
<bean name="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
	<property name="driverClassName" value="${jdbc.driver}"></property>
	<property name="url" value="${jdbc.url}"></property>
	<property name="username" value="${jdbc.user}"></property>
	<property name="password" value="${jdbc.password}"></property>
</bean>

<!-- 配置mybatis-spring整合包里的sqlSessionFactoryBean,生产session的工厂 -->
<bean name="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!-- 配置依赖连接池 -->
	<property name="dataSource" ref="druidDataSource"></property>
	<!-- 把mybatis的配置文件导入 -->
	<property name="configLocation" value="classpath:SqlmapConfig.xml"></property>
</bean>

<!-- mapper动态代理配置,第一式 -->
<!-- <bean name="categoryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> -->
	<!-- (session.getMapper(xxx.class))动态生成的mapper依赖于SqlSessionFactory -->
<!-- 	<property name="sqlSessionFactory" ref="sessionFactory"></property> -->
	<!-- 动态代理的接口类型 -->
<!-- 	<property name="mapperInterface" value="com.owen.mapper.CategoryMapper"></property> -->
<!-- </bean> -->

<!-- 第二式,配置自动扫描,可用来生成代理 -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<property name="basePackage" value="com.owen.mapper"></property>
</bean>

<!-- 配置事务的核心管理器;封装了所有事务的操作;依赖连接池 -->
<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="druidDataSource"></property>
</bean>

<!-- 开启使用注解管理aop事务 -->
<tx:annotation-driven/>

</beans>

